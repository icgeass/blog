<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    		http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-autowire="byName">

    <!-- 不要修改，系统自动生成 -->

    <tx:annotation-driven transaction-manager="tx" proxy-target-class="true"/>


    <bean id="statFilter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="10000" />
        <property name="logSlowSql" value="true" />
    </bean>

    <!-- http://www.cnblogs.com/lmaplet/p/6170105.html -->
    <bean id="abstractDruidDataSource" class="com.alibaba.druid.pool.DruidDataSource" abstract="true" init-method="init" destroy-method="close">
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <property name="proxyFilters">
            <list>
                <ref bean="statFilter" />
            </list>
        </property>

        <property name="maxActive" value="30" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />

        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="validationQuery" value="SELECT 1"/>
        <property name="validationQueryTimeout" value="5"/>

        <property name="maxOpenPreparedStatements" value="20" />

        <property name="asyncInit" value="true" />

        <!--sqlite报错 https://blog.csdn.net/u011943534/article/details/88060139 -->
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="-1"/>
    </bean>


    <bean id="masterDataSource" parent="abstractDruidDataSource">
        <property name="url" value="${jdbc.master.url}" />
    </bean>

    <!--<bean id="slaveDataSource" parent="abstractDruidDataSource">-->
        <!--<property name="url" value="${jdbc.slave.url}" />-->
    <!--</bean>-->

    <!--动态数据源，选择主库或从库-->
    <bean id="dataSource" class="com.zeroq6.common.datasource.DynamicDataSource">
        <property name="masterDataSource" ref="masterDataSource" />
        <property name="slaveDataSourceList">
            <list>
                <!--<ref bean="slaveDataSource" />-->
            </list>
        </property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="tx" class="com.zeroq6.common.datasource.DynamicDataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 集成Mybatis -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:spring/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath*:sqlmap/**/*.xml"/>
        <property name="plugins">
            <array>
                <!--<bean class="com.zeroq6.common.mybatis.MybatisSqlInterceptor"/>-->
                <bean class="com.zeroq6.common.datasource.DynamicDataSourceInterceptor"/>
            </array>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zeroq6.blog.common.dao,com.zeroq6.blog.operate.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFactory" />
    </bean>

    <bean id="sqlTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sessionFactory" />
    </bean>
    <bean id="batchSqlTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sessionFactory" />
        <constructor-arg index="1" value="BATCH" />
    </bean>

</beans>
